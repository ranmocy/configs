#!/bin/bash

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $terminal gnome-terminal
set $home ~

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn't scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod


# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the first scratchpad window
bindsym $mod+minus scratchpad show
# Show the sup-mail scratchpad window, if any.
# bindsym $mod4+Alt+minus [title="^Sup ::"] scratchpad show


# start a terminal
bindsym $mod+Return exec $terminal
bindsym $mod+Shift+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill
# bindsym $mod+Alt+q kill
# The middle button and a modifer over any part of the window kills the window
bindsym --whole-window $mod+Shift+button2 kill
# xkill does not work with bindsysm
# bindsym $mod+Shift+Control+q exec "xterm -e xkill"

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop

# Auto switch back and forth
# https://i3wm.org/docs/userguide.html#_automatic_back_and_forth_when_switching_to_the_current_workspace
#workspace_auto_back_and_forth yes

# Focus follows mouse
focus_follows_mouse no

# change focus
bindsym $mod+j focus left
bindsym $mod+l focus right
bindsym $mod+i focus up
bindsym $mod+k focus down
# switch output
# bindsym $mod+o focus output right

# change focus between workspace
bindsym $mod+Left workspace prev
bindsym $mod+Right workspace next
bindsym $mod+Up focus up
bindsym $mod+Down focus down

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+i move up
bindsym $mod+Shift+l move right
# For ChromeOS, to avoid conflict with Mod+l which lock the screen
bindsym $mod+semicolon focus right
bindsym $mod+Shift+semicolon move right
# move window to output
# bindsym $mod+Shift+o move container to output right, focus output right
# move workspace
#bindsym $mod+Shift+o move workspace to output right, focus output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
workspace_layout stacking
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# bindsym $mod+g layout toggle all

# toggle tiling / floating
bindsym $mod+g floating toggle
bindsym $mod+Shift+g floating toggle
# bindsym $mod+Shift+f floating toggle
# The right button toggles floating
bindsym $mod+Shift+button3 floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+c focus child

# named workspace
set $1 1
set $2 2
set $3 3
set $4 4
set $5 5
set $6 6
set $7 7
set $8 8
set $9 9
set $0 10
set $c 11:C
set $o 12:O
set $p 90:P

# Auto layout
# workspace $1 output $left_monitor
# workspace $2 output $left_monitor
# workspace $3 output $left_monitor
# workspace $4 output $left_monitor
# workspace $5 output $left_monitor
# workspace $6 output $right_monitor
# workspace $7 output $right_monitor
# workspace $8 output $right_monitor
# workspace $9 output $right_monitor
# workspace $0 output $right_monitor
# workspace $c output $right_monitor
# workspace $p output $left_monitor
# assign [class="^Gnome-terminal$"] $1
assign [class="^Google-chrome$"] $c
# assign [title="Hangouts"] $0
# for_window [title="^Android Monitor - "] move container to output $right_monitor
for_window [title="^Android Emulator - "] floating enabled
for_window [window_role="pop-up"] floating enabled
for_window [window_role="bubble"] floating enabled
# Auto focus to make pop-up window on top
# for_window [class="^jetbrains-.+"][window_type=dialog] focus
for_window [window_type=dialog] focus

# switch to workspace
bindsym $mod+1 workspace $1
bindsym $mod+2 workspace $2
bindsym $mod+3 workspace $3
bindsym $mod+4 workspace $4
bindsym $mod+5 workspace $5
bindsym $mod+6 workspace $6
bindsym $mod+7 workspace $7
bindsym $mod+8 workspace $8
bindsym $mod+9 workspace $9
bindsym $mod+0 workspace $0
bindsym $mod+c workspace $c
bindsym $mod+o workspace $o
bindsym $mod+p workspace $p
bindsym Control+F1 workspace $1
bindsym Control+F2 workspace $2
bindsym Control+Shift+F1 move container to workspace $1
bindsym Control+Shift+F2 move container to workspace $2

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $1
bindsym $mod+Shift+2 move container to workspace $2
bindsym $mod+Shift+3 move container to workspace $3
bindsym $mod+Shift+4 move container to workspace $4
bindsym $mod+Shift+5 move container to workspace $5
bindsym $mod+Shift+6 move container to workspace $6
bindsym $mod+Shift+7 move container to workspace $7
bindsym $mod+Shift+8 move container to workspace $8
bindsym $mod+Shift+9 move container to workspace $9
bindsym $mod+Shift+0 move container to workspace $0
bindsym $mod+Shift+c move container to workspace $c
bindsym $mod+Shift+o move container to workspace $o
bindsym $mod+Shift+p move container to workspace $p

# reload the configuration file
bindsym $mod+r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize resolution
mode "resolution" {
        bindsym 1 exec xrandr --output screen --mode 3584x2112_60.00, mode "default"
        bindsym 2 exec xrandr --output screen --mode 5120x2560_60.00, mode "default"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# Mod+\
bindsym $mod+backslash mode "resolution"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window's width.
        # Pressing right will grow the window's width.
        # Pressing up will shrink the window's height.
        # Pressing down will grow the window's height.
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt
        # bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# bindsym $mod+s mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        # strip_workspace_numbers yes
        status_command i3status
}


# Custumized

# Launch mode
mode "launch" {
        bindsym c exec google-chrome, mode "default"
        # go back to normal (if we don't launch something)
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# Mod+'
bindsym $mod+apostrophe mode "launch"

# Key remapping
exec_always --no-startup-id $home/bin/kmap
exec --no-startup-id $home/bin/kmap

# lock screen
#Auto turn off screen after idle N seconds
exec --no-startup-id xset dpms 300

#bindsym XF86Sleep exec "gnome-screensaver-command --lock"
#bindsym Scroll_Lock exec "gnome-screensaver-command --lock"
bindsym Scroll_Lock exec --no-startup-id xautolock -locknow
# Auto lock
exec --no-startup-id $home/bin/locker

# Print key
bindsym Print exec --no-startup-id scrot /tmp/screenshot.png

# Volume Control
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 1 +5% && killall -SIGUSR1 i3status
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 1 -- -5% && killall -SIGUSR1 i3status
bindsym XF86AudioMute exec pactl set-sink-mute 1 toggle && killall -SIGUSR1 i3status

# Background app startup
exec --no-startup-id start-pulseaudio-x11
# Indicators
exec --no-startup-id obno-popup-notifier
# exec --no-startup-id nm-applet
exec --no-startup-id volti # sound applet
# exec --no-startup-id dunst -config ~/.i3/dunstrc
# exec --no-startup-id fcitx
# exec --no-startup-id system-config-printer-applet
# Apps
# exec --no-startup-id google-chrome

# layout <default|tabbed|stacking|splitv|splith>
# exec --no-startup-id i3-msg 'workspace $c; layout tabbed'
